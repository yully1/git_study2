DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_goodsInfo HTTP/1.1" 200 1361
ERROR    root:test_business_token_goodsinfo03.py:96 测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 1.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'aaaaaaaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '如如如如', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '精华面霜', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': 'aaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小白瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小红瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '美容仪', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '防晒二代', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 200}]}
ERROR    root:test_business_token_goodsinfo03.py:97 assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show