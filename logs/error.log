2022-03-02 19:29:27,393 - [test_login03.py - 68] - 40:测试编号8，测试标题测试用户类型格式错误的场景，执行失败，实际结果{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
2022-03-02 19:29:27,393 - [test_login03.py - 69] - 40:assert {'code': 1005...ypeId类型格式不正确'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': 'typeId类型格式不正确'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1005} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  ?             ^                   ^^^^^^^^^^^^^
  + {'code': 1005, 'msg': 'typeId类型格式不正确'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...ypeId类型格式不正确'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': 'typeId类型格式不正确'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1005} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  ?             ^                   ^^^^^^^^^^^^^
  + {'code': 1005, 'msg': 'typeId类型格式不正确'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 09:25:35,545 - [test_login03.py - 69] - 40:测试编号4，测试标题测试密码输入错误的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwMDczNS41MTQ2OTc2OjA3MTBlN2M2MmM5OWVjM2ZmYTRmMDRmNmQyNzlkZDIwYjQyNTI3MzY='}
2022-03-03 09:25:35,545 - [test_login03.py - 70] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YjQyNTI3MzY='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDczNS41MTQ2OTc2OjA3MTBlN2M2MmM5OWVjM2ZmYTRmMDRmNmQyNzlkZDIwYjQyNTI3MzY='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 66, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YjQyNTI3MzY='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDczNS41MTQ2OTc2OjA3MTBlN2M2MmM5OWVjM2ZmYTRmMDRmNmQyNzlkZDIwYjQyNTI3MzY='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 09:27:57,966 - [test_login03.py - 69] - 40:测试编号4，测试标题测试密码输入错误的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwMDg3Ny45MzUxNzE6NDQwYzEzMTAzNjVmMDdiZWZkY2IyM2VhYzUyMWFjNjFhOTQ3MmVhNw=='}
2022-03-03 09:27:57,982 - [test_login03.py - 70] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OTQ3MmVhNw=='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDg3Ny45MzUxNzE6NDQwYzEzMTAzNjVmMDdiZWZkY2IyM2VhYzUyMWFjNjFhOTQ3MmVhNw=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 66, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OTQ3MmVhNw=='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDg3Ny45MzUxNzE6NDQwYzEzMTAzNjVmMDdiZWZkY2IyM2VhYzUyMWFjNjFhOTQ3MmVhNw=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 09:27:58,122 - [test_login03.py - 69] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwMDg3OC4wOTEzODMyOjgxOGQ3NzUyMDcwY2UxZTNiZDQyMGVhZDBkYWNhYTY2ZTE2OWU1YjQ='}
2022-03-03 09:27:58,122 - [test_login03.py - 70] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTE2OWU1YjQ='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDg3OC4wOTEzODMyOjgxOGQ3NzUyMDcwY2UxZTNiZDQyMGVhZDBkYWNhYTY2ZTE2OWU1YjQ='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 66, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTE2OWU1YjQ='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwMDg3OC4wOTEzODMyOjgxOGQ3NzUyMDcwY2UxZTNiZDQyMGVhZDBkYWNhYTY2ZTE2OWU1YjQ='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 10:50:02,409 - [test_login03.py - 72] - 40:测试编号4，测试标题测试密码输入错误的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNTgwMi4zNzgwNjUzOmUzZDVjOTdjZDhhYjhjYjJjNmU5ODlkODQ2MzNhNTEzZTFjMGUxZDc='}
2022-03-03 10:50:02,409 - [test_login03.py - 73] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTFjMGUxZDc='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNTgwMi4zNzgwNjUzOmUzZDVjOTdjZDhhYjhjYjJjNmU5ODlkODQ2MzNhNTEzZTFjMGUxZDc='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 69, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTFjMGUxZDc='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNTgwMi4zNzgwNjUzOmUzZDVjOTdjZDhhYjhjYjJjNmU5ODlkODQ2MzNhNTEzZTFjMGUxZDc='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 10:50:02,581 - [test_login03.py - 72] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNTgwMi41NDk4OTk4OjliODVmNWY4OWFjNDQxZTI3YWE5NmZhNTU1NTExMjVhZTE0NTJkMDI='}
2022-03-03 10:50:02,581 - [test_login03.py - 73] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTE0NTJkMDI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNTgwMi41NDk4OTk4OjliODVmNWY4OWFjNDQxZTI3YWE5NmZhNTU1NTExMjVhZTE0NTJkMDI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login03.py", line 69, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTE0NTJkMDI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNTgwMi41NDk4OTk4OjliODVmNWY4OWFjNDQxZTI3YWE5NmZhNTU1NTExMjVhZTE0NTJkMDI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:10:10,600 - [test_login04.py - 68] - 40:测试编号4，测试标题测试密码输入错误的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzAxMC41Njk1NTg0OmUzMGI4NzhiODE5NDNkMWNlNjhiOTJhYTEzYTlkOWI5NTFhYWRmNzQ='}
2022-03-03 11:10:10,600 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NTFhYWRmNzQ='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzAxMC41Njk1NTg0OmUzMGI4NzhiODE5NDNkMWNlNjhiOTJhYTEzYTlkOWI5NTFhYWRmNzQ='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NTFhYWRmNzQ='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzAxMC41Njk1NTg0OmUzMGI4NzhiODE5NDNkMWNlNjhiOTJhYTEzYTlkOWI5NTFhYWRmNzQ='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:10:10,852 - [test_login04.py - 68] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzAxMC43NTgzNTU2OmRjZWRiMjE5ZTdmNWRhZWM4MzhhZTA3NDY2YzQ4MWQzMDAxYjU2OTI='}
2022-03-03 11:10:10,852 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDAxYjU2OTI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzAxMC43NTgzNTU2OmRjZWRiMjE5ZTdmNWRhZWM4MzhhZTA3NDY2YzQ4MWQzMDAxYjU2OTI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDAxYjU2OTI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzAxMC43NTgzNTU2OmRjZWRiMjE5ZTdmNWRhZWM4MzhhZTA3NDY2YzQ4MWQzMDAxYjU2OTI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:11:06,235 - [test_login04.py - 68] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzA2Ni4xODg3NTc3OjZlODQ3MDcxYTA1MDQzZmJlZWMzZTI1YzA5YmRmM2FmZTQxYTE2NzU='}
2022-03-03 11:11:06,235 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTQxYTE2NzU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzA2Ni4xODg3NTc3OjZlODQ3MDcxYTA1MDQzZmJlZWMzZTI1YzA5YmRmM2FmZTQxYTE2NzU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTQxYTE2NzU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzA2Ni4xODg3NTc3OjZlODQ3MDcxYTA1MDQzZmJlZWMzZTI1YzA5YmRmM2FmZTQxYTE2NzU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:11:06,298 - [test_login04.py - 68] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzA2Ni4yNTEyNDIyOjNmMDgxZTA3ZTU5MGU1ZGFjYzUxZWFlM2I2OTNhMmVkZTMwNjQyNjg='}
2022-03-03 11:11:06,298 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTMwNjQyNjg='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzA2Ni4yNTEyNDIyOjNmMDgxZTA3ZTU5MGU1ZGFjYzUxZWFlM2I2OTNhMmVkZTMwNjQyNjg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTMwNjQyNjg='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzA2Ni4yNTEyNDIyOjNmMDgxZTA3ZTU5MGU1ZGFjYzUxZWFlM2I2OTNhMmVkZTMwNjQyNjg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:13:42,870 - [test_login04.py - 68] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzIyMi44MjM1NjQ4OmEyOTFmNTE0NDczNTUyYWE3MDVjOTdkMzYzMGRkNWQ1OGFmOGFiZTg='}
2022-03-03 11:13:42,870 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OGFmOGFiZTg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzIyMi44MjM1NjQ4OmEyOTFmNTE0NDczNTUyYWE3MDVjOTdkMzYzMGRkNWQ1OGFmOGFiZTg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OGFmOGFiZTg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzIyMi44MjM1NjQ4OmEyOTFmNTE0NDczNTUyYWE3MDVjOTdkMzYzMGRkNWQ1OGFmOGFiZTg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:13:42,979 - [test_login04.py - 68] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwNzIyMi45NDg1Mzc6MjdmNjBiNTZlMTgxODE4YjIyY2IwZTg2OWI0ZDU2YzZiZTM2NmNiYg=='}
2022-03-03 11:13:42,979 - [test_login04.py - 69] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTM2NmNiYg=='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzIyMi45NDg1Mzc6MjdmNjBiNTZlMTgxODE4YjIyY2IwZTg2OWI0ZDU2YzZiZTM2NmNiYg=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login04.py", line 65, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTM2NmNiYg=='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjMwNzIyMi45NDg1Mzc6MjdmNjBiNTZlMTgxODE4YjIyY2IwZTg2OWI0ZDU2YzZiZTM2NmNiYg=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:58:43,882 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwOTkyMy44NDI2MzY4OmRmNjc2Mzc5ZWQxYzEyMDM1ZGRmZTQxNzZjZDEwYTk3MDYyYzQ1MDg='}
2022-03-03 11:58:43,882 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDYyYzQ1MDg='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwOTkyMy44NDI2MzY4OmRmNjc2Mzc5ZWQxYzEyMDM1ZGRmZTQxNzZjZDEwYTk3MDYyYzQ1MDg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDYyYzQ1MDg='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwOTkyMy44NDI2MzY4OmRmNjc2Mzc5ZWQxYzEyMDM1ZGRmZTQxNzZjZDEwYTk3MDYyYzQ1MDg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 11:58:43,989 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjMwOTkyMy45NTEzNDU3OmEwOTgxNzc3NmU0MzFhODUzMTNkMWYwYmQyZWJiMjMwMjI3OTJkZDE='}
2022-03-03 11:58:43,989 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MjI3OTJkZDE='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwOTkyMy45NTEzNDU3OmEwOTgxNzc3NmU0MzFhODUzMTNkMWYwYmQyZWJiMjMwMjI3OTJkZDE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MjI3OTJkZDE='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjMwOTkyMy45NTEzNDU3OmEwOTgxNzc3NmU0MzFhODUzMTNkMWYwYmQyZWJiMjMwMjI3OTJkZDE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-03 14:34:41,697 - [test_business_register01.py - 30] - 40:测试标号1，测试标题正常流程，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 14:34:41,697 - [test_business_register01.py - 31] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register01.py", line 27, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 14:52:40,694 - [test_business_register01.py - 30] - 40:测试标号1，测试标题正常流程，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 14:52:40,694 - [test_business_register01.py - 31] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register01.py", line 27, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:27,060 - [test_business_register03.py - 64] - 40:测试标号9，测试标题测试确认密码为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:27,061 - [test_business_register03.py - 65] - 40:assert {'code': 1004...': '重复密码不能为空'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '重复密码不能为空'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1004, 'msg': '重复密码不能为空'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...': '重复密码不能为空'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '重复密码不能为空'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1004, 'msg': '重复密码不能为空'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:38:27,196 - [test_business_register03.py - 64] - 40:测试标号10，测试标题测试确认密码和密码不一致的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:27,196 - [test_business_register03.py - 65] - 40:assert {'code': 1007...g': '两次密码不一致'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '两次密码不一致'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1007, 'msg': '两次密码不一致'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...g': '两次密码不一致'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '两次密码不一致'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1007, 'msg': '两次密码不一致'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:38:27,399 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:27,399 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:38:28,214 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:28,214 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:38:28,290 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:28,290 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:38:41,266 - [test_business_register03.py - 64] - 40:测试标号9，测试标题测试确认密码为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:41,266 - [test_business_register03.py - 65] - 40:assert {'code': 1004...': '重复密码不能为空'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '重复密码不能为空'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1004} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1004, 'msg': '重复密码不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...': '重复密码不能为空'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '重复密码不能为空'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1004} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1004, 'msg': '重复密码不能为空'}
2022-03-03 16:38:41,392 - [test_business_register03.py - 64] - 40:测试标号10，测试标题测试确认密码和密码不一致的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:41,392 - [test_business_register03.py - 65] - 40:assert {'code': 1007...g': '两次密码不一致'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '两次密码不一致'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1007} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1007, 'msg': '两次密码不一致'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...g': '两次密码不一致'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '两次密码不一致'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1007} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1007, 'msg': '两次密码不一致'}
2022-03-03 16:38:41,593 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:41,593 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-03 16:38:41,863 - [test_business_register03.py - 64] - 40:测试标号17，测试标题测试性别为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:41,863 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:42,061 - [test_business_register03.py - 64] - 40:测试标号20，测试标题测试生日为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:42,061 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:42,352 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:42,352 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:38:42,426 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:42,426 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:38:42,499 - [test_business_register03.py - 64] - 40:测试标号26，测试标题测试qq号码为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:42,499 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:38:42,647 - [test_business_register03.py - 64] - 40:测试标号29，测试标题测试email为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:38:42,647 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1000} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:39:59,491 - [test_business_register03.py - 64] - 40:测试标号9，测试标题测试确认密码为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:39:59,492 - [test_business_register03.py - 65] - 40:assert {'code': 1004...': '重复密码不能为空'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '重复密码不能为空'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1004, 'msg': '重复密码不能为空'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...': '重复密码不能为空'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '重复密码不能为空'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1004, 'msg': '重复密码不能为空'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:39:59,621 - [test_business_register03.py - 64] - 40:测试标号10，测试标题测试确认密码和密码不一致的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:39:59,621 - [test_business_register03.py - 65] - 40:assert {'code': 1007...g': '两次密码不一致'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '两次密码不一致'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1007, 'msg': '两次密码不一致'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...g': '两次密码不一致'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '两次密码不一致'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1007, 'msg': '两次密码不一致'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:39:59,824 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:39:59,824 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:40:00,584 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:40:00,584 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:40:00,658 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:40:00,658 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:44:09,790 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:44:09,790 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:44:10,656 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:44:10,656 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:44:10,732 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:44:10,732 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:47:27,034 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,035 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-03 16:47:27,362 - [test_business_register03.py - 64] - 40:测试标号17，测试标题测试性别为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,362 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:27,570 - [test_business_register03.py - 64] - 40:测试标号20，测试标题测试生日为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,570 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:27,853 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,853 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:47:27,923 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,924 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:47:27,995 - [test_business_register03.py - 64] - 40:测试标号26，测试标题测试qq号码为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:27,995 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:28,194 - [test_business_register03.py - 64] - 40:测试标号29，测试标题测试email为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:47:28,194 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:56,480 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:56,480 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 16:47:57,283 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:57,284 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:47:57,358 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 16:47:57,358 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:50:27,936 - [test_business_register03.py - 64] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:27,936 - [test_business_register03.py - 65] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-03 16:50:28,254 - [test_business_register03.py - 64] - 40:测试标号17，测试标题测试性别为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:28,254 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:50:28,460 - [test_business_register03.py - 64] - 40:测试标号20，测试标题测试生日为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:28,460 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:50:28,748 - [test_business_register03.py - 64] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:28,749 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:50:28,821 - [test_business_register03.py - 64] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:28,821 - [test_business_register03.py - 65] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 16:50:28,892 - [test_business_register03.py - 64] - 40:测试标号26，测试标题测试qq号码为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:28,892 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 16:50:29,108 - [test_business_register03.py - 64] - 40:测试标号29，测试标题测试email为空的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 16:50:29,108 - [test_business_register03.py - 65] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 56, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:37,920 - [test_business_register03.py - 66] - 40:测试标号5，测试标题测试用户名已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:37,920 - [test_business_register03.py - 67] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 17:01:38,513 - [test_business_register03.py - 66] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:38,513 - [test_business_register03.py - 67] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-03 17:01:38,718 - [test_business_register03.py - 66] - 40:测试标号16，测试标题测试手机号码已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:38,719 - [test_business_register03.py - 67] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-03 17:01:39,281 - [test_business_register03.py - 66] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:39,281 - [test_business_register03.py - 67] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 17:01:39,354 - [test_business_register03.py - 66] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:39,354 - [test_business_register03.py - 67] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-03 17:01:39,765 - [test_business_register03.py - 66] - 40:测试标号31，测试标题测试email已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-03 17:01:39,765 - [test_business_register03.py - 67] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 58, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 10:31:39,440 - [test_business_register03.py - 65] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:31:39,440 - [test_business_register03.py - 66] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 10:31:39,714 - [test_business_register03.py - 65] - 40:测试标号16，测试标题测试手机号码已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:31:39,715 - [test_business_register03.py - 66] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 10:31:40,336 - [test_business_register03.py - 65] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:31:40,337 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 10:31:40,419 - [test_business_register03.py - 65] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:31:40,419 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 10:31:40,841 - [test_business_register03.py - 65] - 40:测试标号31，测试标题测试email已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:31:40,841 - [test_business_register03.py - 66] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 10:32:25,037 - [test_business_register03.py - 65] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:32:25,038 - [test_business_register03.py - 66] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  {'code': 1008} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  {'code': 1008} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 10:32:25,310 - [test_business_register03.py - 65] - 40:测试标号16，测试标题测试手机号码已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:32:25,310 - [test_business_register03.py - 66] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 10:32:25,897 - [test_business_register03.py - 65] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:32:25,897 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 10:32:25,974 - [test_business_register03.py - 65] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:32:25,975 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 10:32:26,436 - [test_business_register03.py - 65] - 40:测试标号31，测试标题测试email已注册的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:32:26,436 - [test_business_register03.py - 66] - 40:assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...、手机号、邮箱已经被注册'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '该用户名、手机号、邮箱已经被注册'} != {'msg': '注册成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 10:45:05,839 - [test_business_register03.py - 65] - 40:测试标号13，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:45:05,839 - [test_business_register03.py - 66] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  {'code': 1008} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  {'code': 1008} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 10:45:06,731 - [test_business_register03.py - 65] - 40:测试标号24，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:45:06,731 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 10:45:06,809 - [test_business_register03.py - 65] - 40:测试标号25，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 10:45:06,809 - [test_business_register03.py - 66] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 57, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:08:56,710 - [test_business_register03.py - 71] - 40:测试标号15，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 11:08:56,710 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 11:08:57,560 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 11:08:57,560 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:08:57,634 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-04 11:08:57,634 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 9999} != {'code': 1000}
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:09:16,218 - [test_business_register03.py - 71] - 40:测试标号15，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:16,218 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-04 11:09:17,188 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:17,189 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:09:17,270 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:17,270 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:09:28,136 - [test_business_register03.py - 71] - 40:测试标号15，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:28,137 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-04 11:09:29,074 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:29,075 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 11:09:29,150 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-04 11:09:29,150 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-04 15:46:47,942 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号2，测试标题测试token值为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:46:47,943 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:46:48,088 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号3，测试标题测试token值错误的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:46:48,088 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:46:48,177 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号4，测试标题测试token值过期的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:46:48,177 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:46:48,780 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号11，测试标题测试isPromote非0和1的数字的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:46:48,780 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:46:48,897 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号12，测试标题测试isPromote是字符的场景，执行失败，实际结果为{'code': 1005, 'msg': '商品销售状态必须为0或者1'}
2022-03-04 15:46:48,897 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 15:50:10,455 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号2，测试标题测试token值为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:50:10,455 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:50:10,561 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号3，测试标题测试token值错误的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:50:10,561 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:50:10,698 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号4，测试标题测试token值过期的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:50:10,699 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:50:11,674 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号11，测试标题测试isPromote非0和1的数字的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:50:11,675 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:50:11,837 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号12，测试标题测试isPromote是字符的场景，执行失败，实际结果为{'code': 1005, 'msg': '商品销售状态必须为0或者1'}
2022-03-04 15:50:11,838 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 15:53:35,993 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号2，测试标题测试token值为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:53:35,994 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1001} != {'code': 1000}
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:53:36,081 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号3，测试标题测试token值错误的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:53:36,082 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:53:36,166 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号4，测试标题测试token值过期的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:53:36,167 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:53:36,848 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号12，测试标题测试isPromote是字符的场景，执行失败，实际结果为{'code': 1005, 'msg': '商品销售状态必须为0或者1'}
2022-03-04 15:53:36,849 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...品促销状态必须为0或者1'} == {'code': 1005...品销售状态必须为0或者1'}
  Differing items:
  {'code': 1006} != {'code': 1005}
  {'msg': '商品促销状态必须为0或者1'} != {'msg': '商品销售状态必须为0或者1'}
  Full diff:
  - {'code': 1005, 'msg': '商品销售状态必须为0或者1'}
  ?             ^             -
  + {'code': 1006, 'msg': '商品促销状态必须为0或者1'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-04 15:58:12,131 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号2，测试标题测试token值为空的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:58:12,131 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  {'code': 1001} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1001... 'token值不能为空'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': 'token值不能为空'} != {'msg': '查询成功'}
  {'code': 1001} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:58:12,270 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号3，测试标题测试token值错误的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:58:12,270 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 15:58:12,355 - [test_business_token_goodsinfo03.py - 62] - 40:测试编号4，测试标题测试token值过期的场景，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-04 15:58:12,355 - [test_business_token_goodsinfo03.py - 63] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 58, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-04 19:13:40,629 - [test_01.py - 29] - 40:测试编号4，测试标题测试密码输入错误的场景，执行失败，实际结果为{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQyMjQyMC41NTk2Nzc0OjA2ZDI4NTY3YWMyNzk5MzYzN2E5NjQ2YTQwZGIzMDZmNWZhZTQ5NTc='}
2022-03-04 19:13:40,629 - [test_01.py - 30] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NWZhZTQ5NTc='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMjQyMC41NTk2Nzc0OjA2ZDI4NTY3YWMyNzk5MzYzN2E5NjQ2YTQwZGIzMDZmNWZhZTQ5NTc='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 26, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NWZhZTQ5NTc='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMjQyMC41NTk2Nzc0OjA2ZDI4NTY3YWMyNzk5MzYzN2E5NjQ2YTQwZGIzMDZmNWZhZTQ5NTc='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-04 19:13:40,828 - [test_01.py - 29] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果为{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQyMjQyMC43NjExMzg0OjMyYjE0NDEwNzZhMDNiNWY4MDhhZDE5YjFmNjA5NjdiZDUyMjFiOTI='}
2022-03-04 19:13:40,828 - [test_01.py - 30] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZDUyMjFiOTI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMjQyMC43NjExMzg0OjMyYjE0NDEwNzZhMDNiNWY4MDhhZDE5YjFmNjA5NjdiZDUyMjFiOTI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 26, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZDUyMjFiOTI='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMjQyMC43NjExMzg0OjMyYjE0NDEwNzZhMDNiNWY4MDhhZDE5YjFmNjA5NjdiZDUyMjFiOTI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-04 19:29:39,516 - [test_01.py - 50] - 40:测试编号1，测试标题正常流程，执行失败，实际结果为{'code': 1007, 'msg': '用户名或者密码错误'}
2022-03-04 19:29:39,516 - [test_01.py - 51] - 40:assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x0000028EA7FA2E48>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 45, in test_login
    assert case.expect in str(res)
AssertionError: assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x0000028EA7FA2E48>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
2022-03-04 19:31:13,168 - [test_01.py - 50] - 40:测试编号1，测试标题正常流程，执行失败，实际结果为{'code': 1007, 'msg': '用户名或者密码错误'}
2022-03-04 19:31:13,168 - [test_01.py - 51] - 40:assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x000002555EBB24A8>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 45, in test_login
    assert case.expect in str(res)
AssertionError: assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x000002555EBB24A8>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
2022-03-04 19:31:50,025 - [test_01.py - 50] - 40:测试编号1，测试标题正常流程，执行失败，实际结果为{'code': 1007, 'msg': '用户名或者密码错误'}
2022-03-04 19:31:50,025 - [test_01.py - 51] - 40:assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x0000021967E28BE0>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 45, in test_login
    assert case.expect in str(res)
AssertionError: assert '登录成功' in "{'code': 1007, 'msg': '用户名或者密码错误'}"
 +  where '登录成功' = <comms.excel_utils.CaseData object at 0x0000021967E28BE0>.expect
 +  and   "{'code': 1007, 'msg': '用户名或者密码错误'}" = str({'code': 1007, 'msg': '用户名或者密码错误'})
2022-03-04 19:34:10,613 - [test_01.py - 50] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果为{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQyMzY1MC41NDA0MDg0OmQzMjA0N2UyNmUyMTUzZjUxNjc3NDE4YWMyNDFjOWE4ZTdmMGFlZDg='}
2022-03-04 19:34:10,613 - [test_01.py - 51] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTdmMGFlZDg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMzY1MC41NDA0MDg0OmQzMjA0N2UyNmUyMTUzZjUxNjc3NDE4YWMyNDFjOWE4ZTdmMGFlZDg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 47, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTdmMGFlZDg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMzY1MC41NDA0MDg0OmQzMjA0N2UyNmUyMTUzZjUxNjc3NDE4YWMyNDFjOWE4ZTdmMGFlZDg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-04 19:34:10,746 - [test_01.py - 50] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果为{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQyMzY1MC42ODAwMzQ5OjZlOWFiNzVhNDRlY2NkZTljYzk0OTgzZTQwMTNkZDkwOTJjZGEzOWI='}
2022-03-04 19:34:10,746 - [test_01.py - 51] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OTJjZGEzOWI='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMzY1MC42ODAwMzQ5OjZlOWFiNzVhNDRlY2NkZTljYzk0OTgzZTQwMTNkZDkwOTJjZGEzOWI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_01.py", line 47, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OTJjZGEzOWI='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQyMzY1MC42ODAwMzQ5OjZlOWFiNzVhNDRlY2NkZTljYzk0OTgzZTQwMTNkZDkwOTJjZGEzOWI='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-05 15:32:04,069 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-05 15:32:04,071 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-05 15:32:04,265 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}]}
2022-03-05 15:32:04,265 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (31 lines hidden), use '-vv' to show
2022-03-05 15:32:04,736 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号9，测试标题商品信息查询—（不带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:04,737 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DC50>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 79, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DC50>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,024 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号12，测试标题商品信息查询—（不带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,024 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DAC8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 79, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DAC8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,120 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号13，测试标题商品信息查询—（带商品）销售状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,120 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DD30>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DD30>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,287 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号14，测试标题商品信息查询—（带商品）销售状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,287 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DA90>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DA90>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,421 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,422 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DDD8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DDD8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,623 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号16，测试标题商品信息查询—（带商品）促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,624 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DB38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682DB38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,752 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,752 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D080>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D080>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,846 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号18，测试标题商品信息查询—（带商品）销售状态为0、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,846 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D0B8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D0B8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:05,969 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号19，测试标题商品信息查询—（带商品）销售状态为1、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:05,970 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D0F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D0F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:32:06,077 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:32:06,077 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D128>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001EB3682D128>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:39:28,881 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:39:28,881 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:39:29,034 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:39:29,034 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:39:30,113 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:39:30,113 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F15640668>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F15640668>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:39:30,337 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:39:30,338 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F156407B8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F156407B8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:39:30,615 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:39:30,615 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F15640860>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024F15640860>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:41:21,800 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:41:21,800 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:41:21,951 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:41:21,951 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:41:23,011 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:41:23,011 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93E48>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93E48>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:41:23,200 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:41:23,200 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93908>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93908>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:41:23,472 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:41:23,472 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93B70>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000015208A93B70>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:42:58,382 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:42:58,383 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:42:58,475 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:42:58,476 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:42:59,517 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:42:59,517 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B04DA0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B04DA0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:42:59,698 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:42:59,698 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B047F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B047F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:43:00,021 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:43:00,021 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B049B0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000001A138B049B0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:43:44,327 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:43:44,327 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:43:44,421 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:43:44,421 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:43:45,468 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:43:45,469 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DA6A0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DA6A0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:43:45,694 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:43:45,694 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DA748>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DA748>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:43:45,964 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:43:45,964 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DAF98>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000024A393DAF98>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:47:55,161 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:47:55,161 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:47:55,262 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:47:55,262 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:47:56,211 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号13，测试标题商品信息查询—（带商品）销售状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:47:56,211 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCED30>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCED30>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:47:56,432 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:47:56,433 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE0F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE0F0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:47:56,647 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:47:56,647 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE160>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE160>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:47:56,915 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-05 15:47:56,915 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE208>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x000002109DBCE208>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-05 15:51:29,752 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号3，测试标题商品信息查询—token区分大小写，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:51:29,753 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 15:51:29,846 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '草莓', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '面条', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}]}
2022-03-05 15:51:29,846 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (95 lines hidden), use '-vv' to show
2022-03-05 16:37:42,475 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQ5OTQ2Mi4zOTg2NDQyOmQ5OTlhZTQ5YzY5MDdhZTc2YTY0NmVmMDhlYjg1NGVmMWY5NDFmODg='}
2022-03-05 16:37:42,476 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MWY5NDFmODg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQ5OTQ2Mi4zOTg2NDQyOmQ5OTlhZTQ5YzY5MDdhZTc2YTY0NmVmMDhlYjg1NGVmMWY5NDFmODg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MWY5NDFmODg='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQ5OTQ2Mi4zOTg2NDQyOmQ5OTlhZTQ5YzY5MDdhZTc2YTY0NmVmMDhlYjg1NGVmMWY5NDFmODg='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-05 16:37:42,572 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0NjQ5OTQ2Mi40OTAzOTg0OmQ3ZjY3NjI3OTJkMWM0NzljZGI0MzM0YTgyMzU3YWJjNDE1MzVmMmU='}
2022-03-05 16:37:42,572 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NDE1MzVmMmU='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQ5OTQ2Mi40OTAzOTg0OmQ3ZjY3NjI3OTJkMWM0NzljZGI0MzM0YTgyMzU3YWJjNDE1MzVmMmU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...NDE1MzVmMmU='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0NjQ5OTQ2Mi40OTAzOTg0OmQ3ZjY3NjI3OTJkMWM0NzljZGI0MzM0YTgyMzU3YWJjNDE1MzVmMmU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-05 17:46:15,041 - [test_business_token_order_items01.py - 72] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-05 17:46:15,041 - [test_business_token_order_items01.py - 73] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 69, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-05 17:46:49,511 - [test_business_token_order_items01.py - 72] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 100.0, 'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}]}
2022-03-05 17:46:49,511 - [test_business_token_order_items01.py - 73] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 69, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-07 10:10:48,660 - [test_business_token_order_items01.py - 75] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-07 10:10:48,661 - [test_business_token_order_items01.py - 76] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 72, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-07 10:10:54,302 - [test_business_token_order_items01.py - 75] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-07 10:10:54,303 - [test_business_token_order_items01.py - 76] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 72, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-07 10:44:56,545 - [test_business_token_goods_input01.py - 30] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 1007, 'msg': '商品类别格式不正确'}
2022-03-07 10:44:56,545 - [test_business_token_goods_input01.py - 31] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 1007...: '商品类别格式不正确'}
  Differing items:
  {'msg': '商品录入成功'} != {'msg': '商品类别格式不正确'}
  {'code': 1000} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '商品类别格式不正确'}
  ?             ^            ^^^^^^^
  + {'code': 1000, 'msg': '商品录入成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 27, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 1007...: '商品类别格式不正确'}
  Differing items:
  {'msg': '商品录入成功'} != {'msg': '商品类别格式不正确'}
  {'code': 1000} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '商品类别格式不正确'}
  ?             ^            ^^^^^^^
  + {'code': 1000, 'msg': '商品录入成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 10:46:06,910 - [test_business_token_goods_input01.py - 30] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 10:46:06,910 - [test_business_token_goods_input01.py - 31] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 1011...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1011}
  {'msg': '商品录入成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Full diff:
  - {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 27, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 1011...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1011}
  {'msg': '商品录入成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Full diff:
  - {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 10:48:15,953 - [test_business_token_goods_input01.py - 34] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 10:48:15,953 - [test_business_token_goods_input01.py - 35] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '商品录入成功'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  ?            ^^          ^ ^^^^^^
  + {'code': 1000, 'msg': '商品录入成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 31, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '商品录入成功'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  ?            ^^          ^ ^^^^^^
  + {'code': 1000, 'msg': '商品录入成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 11:19:13,874 - [test_business_token_goods_input01.py - 52] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 11:19:13,874 - [test_business_token_goods_input01.py - 53] - 40:assert (100020, '精华面... 19, 13), ...) == 1
  +(100020, '精华面霜', 10001, None, 100, datetime.datetime(2022, 3, 7, 11, 19, 13), datetime.date(2099, 12, 31), Decimal('2000.00'), Decimal('0.00'), None, None, 0, 1, '10')
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 48, in test_goods_input
    assert count == 1
AssertionError: assert (100020, '精华面... 19, 13), ...) == 1
  +(100020, '精华面霜', 10001, None, 100, datetime.datetime(2022, 3, 7, 11, 19, 13), datetime.date(2099, 12, 31), Decimal('2000.00'), Decimal('0.00'), None, None, 0, 1, '10')
  -1
2022-03-07 15:02:16,524 - [test_business_token_goods_input01.py - 79] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:02:16,524 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:02:16,764 - [test_business_token_goods_input01.py - 79] - 40:测试编号9，测试标题测试商品分类id为空，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:02:16,765 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1003...sTypeId值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1003} != {'code': 9999}
  {'msg': '商品编号goodsTypeId值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1003, 'msg': '商品编号goodsTypeId值不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1003...sTypeId值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1003} != {'code': 9999}
  {'msg': '商品编号goodsTypeId值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1003, 'msg': '商品编号goodsTypeId值不能为空'}
2022-03-07 15:06:03,687 - [test_business_token_goods_input01.py - 79] - 40:测试编号1，测试标题正常的流程，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:03,687 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:06:03,805 - [test_business_token_goods_input01.py - 79] - 40:测试编号2，测试标题测试商品信息录入—token为空，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:03,805 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1001... 'token值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1001} != {'code': 9999}
  {'msg': 'token值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1001, 'msg': 'token值不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1001... 'token值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1001} != {'code': 9999}
  {'msg': 'token值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1001, 'msg': 'token值不能为空'}
2022-03-07 15:06:03,931 - [test_business_token_goods_input01.py - 79] - 40:测试编号3，测试标题测试商品信息录入——token区分大小写，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:03,932 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1011} != {'code': 9999}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1011} != {'code': 9999}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 15:06:04,066 - [test_business_token_goods_input01.py - 79] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,066 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1011} != {'code': 9999}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1011} != {'code': 9999}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 15:06:04,183 - [test_business_token_goods_input01.py - 79] - 40:测试编号5，测试标题测试商品名为空的场景，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,183 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1002...odsName值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1002} != {'code': 9999}
  {'msg': '商品名称goodsName值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1002, 'msg': '商品名称goodsName值不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1002...odsName值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1002} != {'code': 9999}
  {'msg': '商品名称goodsName值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1002, 'msg': '商品名称goodsName值不能为空'}
2022-03-07 15:06:04,326 - [test_business_token_goods_input01.py - 79] - 40:测试编号6，测试标题测试商品名有效边界的场景，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,326 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:06:04,443 - [test_business_token_goods_input01.py - 79] - 40:测试编号7，测试标题测试商品名无效边界的场景，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,444 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1006...: '商品名称格式不正确'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1006} != {'code': 9999}
  {'msg': '商品名称格式不正确'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1006, 'msg': '商品名称格式不正确'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...: '商品名称格式不正确'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1006} != {'code': 9999}
  {'msg': '商品名称格式不正确'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1006, 'msg': '商品名称格式不正确'}
2022-03-07 15:06:04,561 - [test_business_token_goods_input01.py - 79] - 40:测试编号8，测试标题测试商品名已存在的场景，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,561 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1013...': '产品名称不能重复'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1013} != {'code': 9999}
  {'msg': '产品名称不能重复'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1013, 'msg': '产品名称不能重复'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...': '产品名称不能重复'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1013} != {'code': 9999}
  {'msg': '产品名称不能重复'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 15:06:04,674 - [test_business_token_goods_input01.py - 79] - 40:测试编号9，测试标题测试商品分类id为空，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,675 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1003...sTypeId值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1003} != {'code': 9999}
  {'msg': '商品编号goodsTypeId值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1003, 'msg': '商品编号goodsTypeId值不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1003...sTypeId值不能为空'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1003} != {'code': 9999}
  {'msg': '商品编号goodsTypeId值不能为空'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1003, 'msg': '商品编号goodsTypeId值不能为空'}
2022-03-07 15:06:04,809 - [test_business_token_goods_input01.py - 79] - 40:测试编号10，测试标题测试商品分类id不存在，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,809 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1012...g': '商品分类不存在'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1012} != {'code': 9999}
  {'msg': '商品分类不存在'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1012, 'msg': '商品分类不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1012...g': '商品分类不存在'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1012} != {'code': 9999}
  {'msg': '商品分类不存在'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1012, 'msg': '商品分类不存在'}
2022-03-07 15:06:04,926 - [test_business_token_goods_input01.py - 79] - 40:测试编号11，测试标题测试商品描述为空，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:04,927 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:06:05,051 - [test_business_token_goods_input01.py - 79] - 40:测试编号12，测试标题测试商品描述有效边界，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:05,051 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:06:05,166 - [test_business_token_goods_input01.py - 79] - 40:测试编号13，测试标题测试商品描述无效边界，执行失败，实际结果为{'code': 9999, 'msg': '商品库存number值不存在'}
2022-03-07 15:06:05,167 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1008...: '商品描述格式不正确'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1008} != {'code': 9999}
  {'msg': '商品描述格式不正确'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1008, 'msg': '商品描述格式不正确'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...: '商品描述格式不正确'} == {'code': 9999...库存number值不存在'}
  Differing items:
  {'code': 1008} != {'code': 9999}
  {'msg': '商品描述格式不正确'} != {'msg': '商品库存number值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品库存number值不存在'}
  + {'code': 1008, 'msg': '商品描述格式不正确'}
2022-03-07 15:06:05,291 - [test_business_token_goods_input01.py - 79] - 40:测试编号14，测试标题测试商品库存为空，执行失败，实际结果为{'code': 9999, 'msg': '商品价格shopPrice值不存在'}
2022-03-07 15:06:05,291 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1004...存number值不能为空'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1004} != {'code': 9999}
  {'msg': '商品库存number值不能为空'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1004, 'msg': '商品库存number值不能为空'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...存number值不能为空'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1004} != {'code': 9999}
  {'msg': '商品库存number值不能为空'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1004, 'msg': '商品库存number值不能为空'}
2022-03-07 15:06:05,406 - [test_business_token_goods_input01.py - 79] - 40:测试编号15，测试标题测试商品库存最大整数，执行失败，实际结果为{'code': 9999, 'msg': '商品价格shopPrice值不存在'}
2022-03-07 15:06:05,406 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品录入成功'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品录入成功'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:06:05,525 - [test_business_token_goods_input01.py - 79] - 40:测试编号16，测试标题测试商品库存为小数，执行失败，实际结果为{'code': 9999, 'msg': '商品价格shopPrice值不存在'}
2022-03-07 15:06:05,525 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
2022-03-07 15:06:05,639 - [test_business_token_goods_input01.py - 79] - 40:测试编号17，测试标题测试商品库存为负数，执行失败，实际结果为{'code': 9999, 'msg': '商品价格shopPrice值不存在'}
2022-03-07 15:06:05,639 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
2022-03-07 15:06:05,759 - [test_business_token_goods_input01.py - 79] - 40:测试编号18，测试标题测试商品库存为字符，执行失败，实际结果为{'code': 9999, 'msg': '商品价格shopPrice值不存在'}
2022-03-07 15:06:05,759 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1009...: '商品库存格式不正确'} == {'code': 9999...hopPrice值不存在'}
  Differing items:
  {'code': 1009} != {'code': 9999}
  {'msg': '商品库存格式不正确'} != {'msg': '商品价格shopPrice值不存在'}
  Full diff:
  - {'code': 9999, 'msg': '商品价格shopPrice值不存在'}
  + {'code': 1009, 'msg': '商品库存格式不正确'}
2022-03-07 15:08:27,252 - [test_business_token_goods_input01.py - 79] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:08:27,252 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 15:08:28,069 - [test_business_token_goods_input01.py - 79] - 40:测试编号10，测试标题测试商品分类id不存在，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:08:28,069 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1012...g': '商品分类不存在'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '商品分类不存在'} != {'msg': '商品录入成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^            ^^^^
  + {'code': 1012, 'msg': '商品分类不存在'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1012...g': '商品分类不存在'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '商品分类不存在'} != {'msg': '商品录入成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^            ^^^^
  + {'code': 1012, 'msg': '商品分类不存在'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 15:13:05,540 - [test_business_token_goods_input01.py - 79] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 15:13:05,541 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 15:13:06,028 - [test_business_token_goods_input01.py - 79] - 40:测试编号8，测试标题测试商品名已存在的场景，执行失败，实际结果为{'code': 1006, 'msg': '商品名称格式不正确'}
2022-03-07 15:13:06,028 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1013...': '产品名称不能重复'} == {'code': 1006...: '商品名称格式不正确'}
  Differing items:
  {'code': 1013} != {'code': 1006}
  {'msg': '产品名称不能重复'} != {'msg': '商品名称格式不正确'}
  Full diff:
  - {'code': 1006, 'msg': '商品名称格式不正确'}
  ?            ^^          ^   -- ^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...': '产品名称不能重复'} == {'code': 1006...: '商品名称格式不正确'}
  Differing items:
  {'code': 1013} != {'code': 1006}
  {'msg': '产品名称不能重复'} != {'msg': '商品名称格式不正确'}
  Full diff:
  - {'code': 1006, 'msg': '商品名称格式不正确'}
  ?            ^^          ^   -- ^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 15:37:45,556 - [test_business_token_goods_input01.py - 79] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 15:37:45,556 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 15:37:46,074 - [test_business_token_goods_input01.py - 79] - 40:测试编号8，测试标题测试商品名已存在的场景，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 15:37:46,074 - [test_business_token_goods_input01.py - 80] - 40:assert {'code': 1013...': '产品名称不能重复'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '产品名称不能重复'} != {'msg': '商品录入成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^          ^ ^^^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 72, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...': '产品名称不能重复'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '产品名称不能重复'} != {'msg': '商品录入成功'}
  {'code': 1013} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^          ^ ^^^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 16:00:06,845 - [test_business_token_goods_input01.py - 85] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 16:00:06,845 - [test_business_token_goods_input01.py - 86] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 78, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 16:00:54,570 - [test_business_token_goods_input01.py - 85] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 16:00:54,570 - [test_business_token_goods_input01.py - 86] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 78, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 16:02:02,238 - [test_business_token_goods_input01.py - 85] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 16:02:02,238 - [test_business_token_goods_input01.py - 86] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'code': 1011} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 78, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'code': 1011} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 16:02:02,717 - [test_business_token_goods_input01.py - 85] - 40:测试编号8，测试标题测试商品名已存在的场景，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-07 16:02:02,718 - [test_business_token_goods_input01.py - 86] - 40:assert {'code': 1013...': '产品名称不能重复'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '产品名称不能重复'} != {'msg': '商品录入成功'}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^          ^ ^^^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 78, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1013...': '产品名称不能重复'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'code': 1013} != {'code': 1000}
  {'msg': '产品名称不能重复'} != {'msg': '商品录入成功'}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  ?            ^^          ^ ^^^^
  + {'code': 1013, 'msg': '产品名称不能重复'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-07 16:03:46,175 - [test_business_token_goods_input01.py - 77] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 16:03:46,175 - [test_business_token_goods_input01.py - 78] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 70, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 16:03:53,458 - [test_business_token_goods_input01.py - 77] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 16:03:53,459 - [test_business_token_goods_input01.py - 78] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 70, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 16:04:44,816 - [test_business_token_goods_input01.py - 75] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-07 16:04:44,817 - [test_business_token_goods_input01.py - 76] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 68, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-07 19:06:46,947 - [test_business_token_goods_promote01.py - 47] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-07 19:06:46,947 - [test_business_token_goods_promote01.py - 48] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 41, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
2022-03-07 19:08:00,841 - [test_business_token_goods_promote01.py - 47] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-07 19:08:00,841 - [test_business_token_goods_promote01.py - 48] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 44, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-07 19:08:22,925 - [test_business_token_goods_promote01.py - 45] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-07 19:08:22,925 - [test_business_token_goods_promote01.py - 46] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1000} != {'code': 1012}
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 41, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1000} != {'code': 1012}
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
2022-03-07 19:11:06,284 - [test_business_token_goods_promote01.py - 45] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-07 19:11:06,284 - [test_business_token_goods_promote01.py - 46] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 41, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
2022-03-07 19:12:08,030 - [test_business_token_goods_promote01.py - 45] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-07 19:12:08,030 - [test_business_token_goods_promote01.py - 46] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 41, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1000} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 09:30:00,330 - [test_business_token_goods_input01.py - 74] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-08 09:30:00,330 - [test_business_token_goods_input01.py - 75] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 67, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-08 09:31:44,208 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-08 09:31:44,208 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-08 09:32:41,455 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-08 09:32:41,455 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-08 15:16:08,747 - [Ftest_business_token_goods_promote01.py - 50] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:16:08,748 - [Ftest_business_token_goods_promote01.py - 51] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\Ftest_business_token_goods_promote01.py", line 46, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:16:54,562 - [Ftest_business_token_goods_promote01.py - 50] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:16:54,562 - [Ftest_business_token_goods_promote01.py - 51] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\Ftest_business_token_goods_promote01.py", line 46, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:18:36,421 - [Ftest_business_token_goods_promote01.py - 51] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:18:36,421 - [Ftest_business_token_goods_promote01.py - 52] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\Ftest_business_token_goods_promote01.py", line 47, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:20:55,769 - [Ftest_business_token_goods_promote01.py - 45] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:20:55,769 - [Ftest_business_token_goods_promote01.py - 46] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\Ftest_business_token_goods_promote01.py", line 41, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:24:31,910 - [Ftest_business_token_goods_promote01.py - 47] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:24:31,910 - [Ftest_business_token_goods_promote01.py - 48] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '促销开启设置成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\Ftest_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '促销开启设置成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:30:33,204 - [test_business_token_goods_promote01.py - 47] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:30:33,205 - [test_business_token_goods_promote01.py - 48] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '促销开启设置成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '促销开启设置成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:31:39,865 - [test_business_token_goods_promote01.py - 47] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:31:39,866 - [test_business_token_goods_promote01.py - 48] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:36:10,192 - [test_business_token_goods_delete01.py - 46] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1000, 'msg': '商品删除成功'}
2022-03-08 15:36:10,192 - [test_business_token_goods_delete01.py - 47] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 42, in test_goods_delete
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:36:20,034 - [test_business_token_goods_delete01.py - 42] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-08 15:36:20,034 - [test_business_token_goods_delete01.py - 43] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 38, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 15:36:54,072 - [test_business_token_goods_promote01.py - 52] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:36:54,073 - [test_business_token_goods_promote01.py - 53] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 47, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:36:56,055 - [test_business_token_goods_promote01.py - 52] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:36:56,055 - [test_business_token_goods_promote01.py - 53] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:38:16,366 - [test_business_token_goods_promote01.py - 52] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:38:16,366 - [test_business_token_goods_promote01.py - 53] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 47, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:38:18,010 - [test_business_token_goods_promote01.py - 52] - 40:测试编号13,测试标题测试该商品已经在促销状态，不能再次开启促销,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:38:18,010 - [test_business_token_goods_promote01.py - 53] - 40:assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开启设置成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开启设置成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:38:18,149 - [test_business_token_goods_promote01.py - 52] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:38:18,149 - [test_business_token_goods_promote01.py - 53] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:40:37,264 - [test_business_token_goods_delete01.py - 42] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-08 15:40:37,264 - [test_business_token_goods_delete01.py - 43] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 38, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 15:40:46,248 - [test_business_token_goods_promote01.py - 52] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 15:40:46,248 - [test_business_token_goods_promote01.py - 53] - 40:assert 0 == 1
  +0
  -1
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 47, in test_goods_promote
    assert count == 1
AssertionError: assert 0 == 1
  +0
  -1
2022-03-08 15:40:47,969 - [test_business_token_goods_promote01.py - 52] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:40:47,970 - [test_business_token_goods_promote01.py - 53] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 15:42:51,111 - [test_business_token_goods_promote01.py - 52] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 15:42:51,111 - [test_business_token_goods_promote01.py - 53] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 43, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'code': 1011} != {'code': 1012}
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 17:30:17,686 - [ftest_business_token_goods_promote01.py - 59] - 40:测试编号13,测试标题测试该商品已经在促销状态，不能再次开启促销,执行失败，实际结果为{'code': 1000, 'msg': '促销开启设置成功'}
2022-03-08 17:30:17,687 - [ftest_business_token_goods_promote01.py - 60] - 40:assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开启设置成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\ftest_business_token_goods_promote01.py", line 50, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1000...': '促销开启设置成功'}
  Differing items:
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开启设置成功'}
  {'code': 1012} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '促销开启设置成功'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 17:30:17,847 - [ftest_business_token_goods_promote01.py - 59] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 17:30:17,848 - [ftest_business_token_goods_promote01.py - 60] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\ftest_business_token_goods_promote01.py", line 50, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 17:34:08,131 - [ftest_business_token_goods_promote01.py - 61] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 17:34:08,132 - [ftest_business_token_goods_promote01.py - 62] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\ftest_business_token_goods_promote01.py", line 52, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 17:34:32,476 - [ftest_business_token_goods_promote01.py - 60] - 40:测试编号14,测试标题测试已经下架商品不能进行促销,执行失败，实际结果为{'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-08 17:34:32,476 - [ftest_business_token_goods_promote01.py - 61] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\ftest_business_token_goods_promote01.py", line 51, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1012...销状态，不能再次开启促销'}
  Differing items:
  {'msg': '该商品不存在'} != {'msg': '该商品已经在促销状态，不能再次开启促销'}
  {'code': 1011} != {'code': 1012}
  Full diff:
  - {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-08 19:40:10,667 - [test_business_register03.py - 71] - 40:测试标号15，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:40:10,667 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1008} != {'code': 1013}
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-08 19:40:12,588 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:40:12,589 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:40:12,736 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:40:12,736 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:41:02,121 - [test_business_register03.py - 71] - 40:测试标号15，测试标题测试手机号码不支持号段的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:41:02,121 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '手机号格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1008} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1008, 'msg': '手机号格式错误'}
2022-03-08 19:41:03,720 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:41:03,720 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:41:03,867 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:41:03,867 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 9999} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:45:15,081 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:45:15,081 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:45:15,237 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:45:15,237 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '插入用户数据失败'} != {'msg': '注册成功'}
  {'code': 9999} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:45:29,529 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:45:29,529 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:45:29,675 - [test_business_register03.py - 71] - 40:测试标号27，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:45:29,675 - [test_business_register03.py - 72] - 40:assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 9999...': '插入用户数据失败'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 9999} != {'code': 1013}
  {'msg': '插入用户数据失败'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 9999, 'msg': '插入用户数据失败'}
2022-03-08 19:52:07,330 - [test_business_register03.py - 71] - 40:测试标号25，测试标题测试生日超过当天的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:52:07,330 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  {'code': 1010} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  {'code': 1010} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 19:52:07,477 - [test_business_register03.py - 71] - 40:测试标号26，测试标题测试生日超过合理时间范畴的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:52:07,477 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 19:59:51,091 - [test_business_register03.py - 71] - 40:测试标号17，测试标题密码纯字母的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:59:51,091 - [test_business_register03.py - 72] - 40:assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1006} != {'code': 1000}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
2022-03-08 19:59:51,223 - [test_business_register03.py - 71] - 40:测试标号18，测试标题密码纯数字的场景，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 19:59:51,224 - [test_business_register03.py - 72] - 40:assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1006} != {'code': 1013}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1006} != {'code': 1013}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
2022-03-08 19:59:52,532 - [test_business_register03.py - 71] - 40:测试标号26，测试标题手机号为不支持的号段的场景，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:59:52,532 - [test_business_register03.py - 72] - 40:assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1008...g': '手机号格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1008} != {'code': 1000}
  {'msg': '手机号格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?             ^          ^^^^
  + {'code': 1008, 'msg': '手机号格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 19:59:54,093 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:59:54,093 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 19:59:54,231 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 19:59:54,232 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 20:03:27,820 - [test_business_register03.py - 71] - 40:测试标号17，测试标题密码纯字母的场景，执行失败，实际结果为{'code': 1007, 'msg': '两次密码不一致'}
2022-03-08 20:03:27,821 - [test_business_register03.py - 72] - 40:assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1007...g': '两次密码不一致'}
  Differing items:
  {'code': 1006} != {'code': 1007}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '两次密码不一致'}
  Full diff:
  - {'code': 1007, 'msg': '两次密码不一致'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1007...g': '两次密码不一致'}
  Differing items:
  {'code': 1006} != {'code': 1007}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '两次密码不一致'}
  Full diff:
  - {'code': 1007, 'msg': '两次密码不一致'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
2022-03-08 20:03:28,034 - [test_business_register03.py - 71] - 40:测试标号18，测试标题密码纯数字的场景，执行失败，实际结果为{'code': 1007, 'msg': '两次密码不一致'}
2022-03-08 20:03:28,034 - [test_business_register03.py - 72] - 40:assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1007...g': '两次密码不一致'}
  Differing items:
  {'code': 1006} != {'code': 1007}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '两次密码不一致'}
  Full diff:
  - {'code': 1007, 'msg': '两次密码不一致'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1006...须为7-11位字母和数字'} == {'code': 1007...g': '两次密码不一致'}
  Differing items:
  {'code': 1006} != {'code': 1007}
  {'msg': '密码必须为7-11位字母和数字'} != {'msg': '两次密码不一致'}
  Full diff:
  - {'code': 1007, 'msg': '两次密码不一致'}
  + {'code': 1006, 'msg': '密码必须为7-11位字母和数字'}
2022-03-08 20:03:30,811 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:03:30,811 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:03:30,942 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:03:30,942 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:04:34,717 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:04:34,717 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:04:34,846 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:04:34,846 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:04:56,066 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:04:56,066 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:04:56,338 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:04:56,338 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:04:57,601 - [test_business_token_goods_input01.py - 74] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '商品录入成功'}
2022-03-08 20:04:57,602 - [test_business_token_goods_input01.py - 75] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 67, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1000...sg': '商品录入成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '商品录入成功'}
  {'code': 1011} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '商品录入成功'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-08 20:05:02,827 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 1.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'aaaaaaaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '精华面霜', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '如如如如', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': 'aaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小白瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小红瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '美容仪', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '防晒二代', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 200}]}
2022-03-08 20:05:02,828 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (143 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (143 lines hidden), use '-vv' to show
2022-03-08 20:05:03,289 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号7，测试标题商品信息查询—（不带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:03,289 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB278>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 72, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB278>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:03,570 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号9，测试标题商品信息查询—（不带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:03,571 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB4A8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 79, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB4A8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:03,847 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号11，测试标题商品信息查询—（不带商品）销售状态为1、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:03,847 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FBB38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 79, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FBB38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:04,396 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号15，测试标题商品信息查询—（带商品）促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:04,397 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB6A0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB6A0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:04,676 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号17，测试标题商品信息查询—（带商品）销售状态为0、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:04,676 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB5C0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FB5C0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:05,024 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号19，测试标题商品信息查询—（带商品）销售状态为1、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:05:05,024 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FBB70>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000018F821FBB70>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:05:06,658 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njc3MTEwNi41NDA3Mjc0Ojc2MjVlNDlmZTU1MWIwMDg5MzRjMTNhZWQ5ZjM5YWYzYTU2MGNhNjU='}
2022-03-08 20:05:06,658 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YTU2MGNhNjU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTEwNi41NDA3Mjc0Ojc2MjVlNDlmZTU1MWIwMDg5MzRjMTNhZWQ5ZjM5YWYzYTU2MGNhNjU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YTU2MGNhNjU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTEwNi41NDA3Mjc0Ojc2MjVlNDlmZTU1MWIwMDg5MzRjMTNhZWQ5ZjM5YWYzYTU2MGNhNjU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-08 20:05:06,795 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njc3MTEwNi42NzMzNzI1OmZmNjUwMWMzYmEyZmZlNDBiNDVkNTMyMGNhYjg0ZGMxMDVmNjdiMjY='}
2022-03-08 20:05:06,795 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDVmNjdiMjY='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTEwNi42NzMzNzI1OmZmNjUwMWMzYmEyZmZlNDBiNDVkNTMyMGNhYjg0ZGMxMDVmNjdiMjY='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...MDVmNjdiMjY='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTEwNi42NzMzNzI1OmZmNjUwMWMzYmEyZmZlNDBiNDVkNTMyMGNhYjg0ZGMxMDVmNjdiMjY='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-08 20:05:07,958 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 100.0, 'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}]}
2022-03-08 20:05:07,958 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-08 20:08:34,769 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:08:34,769 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:08:34,974 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:08:34,974 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 20:08:36,360 - [test_business_token_goods_input01.py - 74] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-08 20:08:36,360 - [test_business_token_goods_input01.py - 75] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 67, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-08 20:08:42,344 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 1.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '西瓜', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'aaaaaaaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '如如如如', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '精华面霜', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': 'aaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小白瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小红瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '美容仪', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '防晒二代', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 200}]}
2022-03-08 20:08:42,344 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (143 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (143 lines hidden), use '-vv' to show
2022-03-08 20:08:44,336 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号16，测试标题商品信息查询—（带商品）促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:08:44,336 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000017412B98FD0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000017412B98FD0>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:08:44,875 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号19，测试标题商品信息查询—（带商品）销售状态为1、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-08 20:08:44,876 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000017412B98128>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000017412B98128>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-08 20:08:46,551 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njc3MTMyNi40MzA4NzM2OjU0YzlmYTg5NzU1MjVjMGM3ZDMzMTY4YzcxYzVkZmFlZDc5M2FjMjM='}
2022-03-08 20:08:46,551 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZDc5M2FjMjM='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTMyNi40MzA4NzM2OjU0YzlmYTg5NzU1MjVjMGM3ZDMzMTY4YzcxYzVkZmFlZDc5M2FjMjM='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZDc5M2FjMjM='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTMyNi40MzA4NzM2OjU0YzlmYTg5NzU1MjVjMGM3ZDMzMTY4YzcxYzVkZmFlZDc5M2FjMjM='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-08 20:08:46,685 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njc3MTMyNi41NjY1MTE6ZDEwYjQ3M2RkNDhhY2YzNzEwMzNhYWNiOWRjMzhkYjk3YzI1MWE3YQ=='}
2022-03-08 20:08:46,685 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YzI1MWE3YQ=='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTMyNi41NjY1MTE6ZDEwYjQ3M2RkNDhhY2YzNzEwMzNhYWNiOWRjMzhkYjk3YzI1MWE3YQ=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...YzI1MWE3YQ=='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njc3MTMyNi41NjY1MTE6ZDEwYjQ3M2RkNDhhY2YzNzEwMzNhYWNiOWRjMzhkYjk3YzI1MWE3YQ=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-08 20:08:48,161 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 100.0, 'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}]}
2022-03-08 20:08:48,161 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-08 20:56:54,648 - [test_business_regist_json01.py - 32] - 40:测试编号1，测试标题正常流程,执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 20:56:54,649 - [test_business_regist_json01.py - 33] - 40:assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_regist_json09\test_business_regist_json01.py", line 29, in test_regist_json
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000, 'msg': '注册成功'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1000} != {'code': 1013}
  {'msg': '注册成功'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1000, 'msg': '注册成功'}
2022-03-08 21:28:52,934 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 21:28:52,934 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:28:53,066 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 21:28:53,066 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:29:44,406 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 21:29:44,406 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:29:44,571 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 21:29:44,571 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:32:29,768 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 21:32:29,768 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 21:32:29,897 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1005, 'msg': '用户名必须以字母开头，由字母和数字组成 6-8位的字符串'}
2022-03-08 21:32:29,898 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1005...字组成 6-8位的字符串'}
  Differing items:
  {'code': 1010} != {'code': 1005}
  {'msg': '生日格式错误'} != {'msg': '用户名必须以字母开头，由字母和数字组成 6-8位的字符串'}
  Full diff:
  - {'code': 1005, 'msg': '用户名必须以字母开头，由字母和数字组成 6-8位的字符串'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1005...字组成 6-8位的字符串'}
  Differing items:
  {'code': 1010} != {'code': 1005}
  {'msg': '生日格式错误'} != {'msg': '用户名必须以字母开头，由字母和数字组成 6-8位的字符串'}
  Full diff:
  - {'code': 1005, 'msg': '用户名必须以字母开头，由字母和数字组成 6-8位的字符串'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:33:50,773 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-08 21:33:50,773 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-08 21:33:50,994 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 21:33:50,995 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  {'code': 1010} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  {'code': 1010} != {'code': 1000}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 21:34:19,558 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 21:34:19,558 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-08 21:34:19,693 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1000, 'msg': '注册成功'}
2022-03-08 21:34:19,693 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1000, 'msg': '注册成功'}
  Differing items:
  {'code': 1010} != {'code': 1000}
  {'msg': '生日格式错误'} != {'msg': '注册成功'}
  Full diff:
  - {'code': 1000, 'msg': '注册成功'}
  ?            ^           ^^^^
  + {'code': 1010, 'msg': '生日格式错误'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:19:43,971 - [test_business_token_goods_delete01.py - 61] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 9999, 'msg': '商品删除失败'}
2022-03-09 15:19:43,972 - [test_business_token_goods_delete01.py - 62] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 9999...sg': '商品删除失败'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品删除成功'} != {'msg': '商品删除失败'}
  Full diff:
  - {'code': 9999, 'msg': '商品删除失败'}
  ?          ^^^^              ^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 53, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 9999...sg': '商品删除失败'}
  Differing items:
  {'code': 1000} != {'code': 9999}
  {'msg': '商品删除成功'} != {'msg': '商品删除失败'}
  Full diff:
  - {'code': 9999, 'msg': '商品删除失败'}
  ?          ^^^^              ^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:19:44,525 - [test_business_token_goods_delete01.py - 61] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:19:44,525 - [test_business_token_goods_delete01.py - 62] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 53, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:20:40,074 - [test_business_token_goods_delete01.py - 61] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:20:40,074 - [test_business_token_goods_delete01.py - 62] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 53, in test_goods_delete
    try:
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:21:37,839 - [test_business_token_goods_delete01.py - 62] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 9999, 'msg': '商品删除失败'}
2022-03-09 15:21:37,840 - [test_business_token_goods_delete01.py - 63] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 9999...sg': '商品删除失败'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '商品删除失败'}
  {'code': 1000} != {'code': 9999}
  Full diff:
  - {'code': 9999, 'msg': '商品删除失败'}
  ?          ^^^^              ^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 54, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 9999...sg': '商品删除失败'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '商品删除失败'}
  {'code': 1000} != {'code': 9999}
  Full diff:
  - {'code': 9999, 'msg': '商品删除失败'}
  ?          ^^^^              ^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:21:38,363 - [test_business_token_goods_delete01.py - 62] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:21:38,363 - [test_business_token_goods_delete01.py - 63] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 54, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:22:19,262 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:22:19,262 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:22:46,278 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:22:46,278 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:22:46,820 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:22:46,820 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:23:28,009 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:23:28,009 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:23:39,598 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:23:39,598 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:23:40,147 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:23:40,147 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:24:04,369 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:24:04,369 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:24:04,936 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:24:04,937 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:51:35,397 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:51:35,397 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:51:35,969 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:51:35,969 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  {'code': 1005} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 15:53:30,039 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 15:53:30,039 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:26:56,620 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 16:26:56,620 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  {'code': 1000} != {'code': 1004}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:27:29,682 - [test_business_token_goods_delete01.py - 59] - 40:测试编号1,测试标题正常流程，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 16:27:29,682 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...sg': '商品删除成功'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1000} != {'code': 1004}
  {'msg': '商品删除成功'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          -  ^^^
  + {'code': 1000, 'msg': '商品删除成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:29:23,286 - [test_business_token_goods_delete01.py - 59] - 40:测试编号5,测试标题测试商品编号的商品没下架，执行失败，实际结果{'code': 1004, 'msg': '该商品不存在'}
2022-03-09 16:29:23,286 - [test_business_token_goods_delete01.py - 60] - 40:assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_delete08\test_business_token_goods_delete01.py", line 51, in test_goods_delete
    assert eval(case.expect) == res
AssertionError: assert {'code': 1005...商品没有下架，不允许删除'} == {'code': 1004...sg': '该商品不存在'}
  Differing items:
  {'code': 1005} != {'code': 1004}
  {'msg': '当前商品没有下架，不允许删除'} != {'msg': '该商品不存在'}
  Full diff:
  - {'code': 1004, 'msg': '该商品不存在'}
  ?             ^          ^   ^^
  + {'code': 1005, 'msg': '当前商品没有下架，不允许删除'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:31:49,531 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-09 16:31:49,532 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-09 16:31:49,673 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-09 16:31:49,673 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'code': 1010} != {'code': 1013}
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-09 16:31:52,111 - [test_business_token_goods_input01.py - 74] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-09 16:31:52,111 - [test_business_token_goods_input01.py - 75] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 67, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'code': 1011} != {'code': 1013}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-09 16:31:55,176 - [test_business_token_goods_promote01.py - 65] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
2022-03-09 16:31:55,176 - [test_business_token_goods_promote01.py - 66] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1000} != {'code': 1008}
  {'msg': '促销开启设置成功'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  ?             ^             ^^^^^^^^^^^
  + {'code': 1000, 'msg': '促销开启设置成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 56, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1000} != {'code': 1008}
  {'msg': '促销开启设置成功'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  ?             ^             ^^^^^^^^^^^
  + {'code': 1000, 'msg': '促销开启设置成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:31:56,284 - [test_business_token_goods_promote01.py - 65] - 40:测试编号8,测试标题测试销结束时间小于促销开始时间,执行失败，实际结果为{'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
2022-03-09 16:31:56,284 - [test_business_token_goods_promote01.py - 66] - 40:assert {'code': 1009...必须大于等于促销开始时间'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1009} != {'code': 1008}
  {'msg': '促销结束时间必须大于等于促销开始时间'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1009, 'msg': '促销结束时间必须大于等于促销开始时间'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 56, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1009...必须大于等于促销开始时间'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1009} != {'code': 1008}
  {'msg': '促销结束时间必须大于等于促销开始时间'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1009, 'msg': '促销结束时间必须大于等于促销开始时间'}
2022-03-09 16:31:56,725 - [test_business_token_goods_promote01.py - 65] - 40:测试编号11,测试标题测试商品编号不存在,执行失败，实际结果为{'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
2022-03-09 16:31:56,725 - [test_business_token_goods_promote01.py - 66] - 40:assert {'code': 1011...sg': '该商品不存在'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1011} != {'code': 1008}
  {'msg': '该商品不存在'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1011, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 56, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...sg': '该商品不存在'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1011} != {'code': 1008}
  {'msg': '该商品不存在'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1011, 'msg': '该商品不存在'}
2022-03-09 16:31:56,998 - [test_business_token_goods_promote01.py - 65] - 40:测试编号13,测试标题测试该商品已经在促销状态，不能再次开启促销,执行失败，实际结果为{'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
2022-03-09 16:31:56,999 - [test_business_token_goods_promote01.py - 66] - 40:assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1012} != {'code': 1008}
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 56, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1012...销状态，不能再次开启促销'} == {'code': 1008...开始时间必须大于当前时间'}
  Differing items:
  {'code': 1012} != {'code': 1008}
  {'msg': '该商品已经在促销状态，不能再次开启促销'} != {'msg': '促销开始时间必须大于当前时间'}
  Full diff:
  - {'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
  + {'code': 1012, 'msg': '该商品已经在促销状态，不能再次开启促销'}
2022-03-09 16:31:57,563 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 1.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'aaaaaaaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '如如如如', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '精华面霜', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': 'aaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小白瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小红瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '美容仪', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '防晒二代', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 200}]}
2022-03-09 16:31:57,564 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show
2022-03-09 16:31:59,280 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号16，测试标题商品信息查询—（带商品）促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-09 16:31:59,280 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0B00>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0B00>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-09 16:31:59,754 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号19，测试标题商品信息查询—（带商品）销售状态为1、促销状态为0，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-09 16:31:59,754 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0EB8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0EB8>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-09 16:31:59,888 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-09 16:31:59,888 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0B38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000025EFDCC0B38>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-09 16:32:01,378 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njg0NDcyMS4xODMzOTI1OjI3YmMzODhhOGI5YTZiNTJiMjA2MWY1NDljODRmNmM1M2U3ZDM0MWE='}
2022-03-09 16:32:01,378 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...M2U3ZDM0MWE='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NDcyMS4xODMzOTI1OjI3YmMzODhhOGI5YTZiNTJiMjA2MWY1NDljODRmNmM1M2U3ZDM0MWE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...M2U3ZDM0MWE='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NDcyMS4xODMzOTI1OjI3YmMzODhhOGI5YTZiNTJiMjA2MWY1NDljODRmNmM1M2U3ZDM0MWE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-09 16:32:01,519 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njg0NDcyMS4zOTg4MTYzOmFjYzMxMWEwNmNjMGE4MmQ5YmQwYjM4MWFjN2RkYjkzOGViNjdjMTE='}
2022-03-09 16:32:01,519 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OGViNjdjMTE='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NDcyMS4zOTg4MTYzOmFjYzMxMWEwNmNjMGE4MmQ5YmQwYjM4MWFjN2RkYjkzOGViNjdjMTE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...OGViNjdjMTE='}
  Differing items:
  {'code': 1007} != {'code': 1000}
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NDcyMS4zOTg4MTYzOmFjYzMxMWEwNmNjMGE4MmQ5YmQwYjM4MWFjN2RkYjkzOGViNjdjMTE='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-09 16:32:02,605 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 0.0, 'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}]}
2022-03-09 16:32:02,606 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'code': 1004} != {'code': 1000}
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '好吃点', 'goods_price': 0.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
2022-03-09 16:38:53,688 - [test_business_register03.py - 71] - 40:测试标号34，测试标题生日超出当前时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-09 16:38:53,688 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-09 16:38:53,818 - [test_business_register03.py - 71] - 40:测试标号35，测试标题生日为不合理的时间，执行失败，实际结果为{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2022-03-09 16:38:53,818 - [test_business_register03.py - 72] - 40:assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_register03\test_business_register03.py", line 63, in test_register
    assert eval(case.expect) == res
AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}
  Differing items:
  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}
  {'code': 1010} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
  + {'code': 1010, 'msg': '生日格式错误'}
2022-03-09 16:38:55,830 - [test_business_token_goods_input01.py - 74] - 40:测试编号4，测试标题测试商品信息录入—上一次token值，执行失败，实际结果为{'code': 1013, 'msg': '产品名称不能重复'}
2022-03-09 16:38:55,830 - [test_business_token_goods_input01.py - 75] - 40:assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_input06\test_business_token_goods_input01.py", line 67, in test_goods_input
    assert eval(case.expect) == res
AssertionError: assert {'code': 1011...请检查token是否失效'} == {'code': 1013...': '产品名称不能重复'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '产品名称不能重复'}
  {'code': 1011} != {'code': 1013}
  Full diff:
  - {'code': 1013, 'msg': '产品名称不能重复'}
  + {'code': 1011, 'msg': '鉴权失败,请检查token是否失效'}
2022-03-09 16:38:58,784 - [test_business_token_goods_promote01.py - 65] - 40:测试编号1,测试标题正常流程,执行失败，实际结果为{'code': 1006, 'msg': '促销结束时间格式不正确'}
2022-03-09 16:38:58,784 - [test_business_token_goods_promote01.py - 66] - 40:assert {'code': 1000...': '促销开启设置成功'} == {'code': 1006...'促销结束时间格式不正确'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '促销结束时间格式不正确'}
  {'code': 1000} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': '促销结束时间格式不正确'}
  ?             ^            ^^^^^^^^^
  + {'code': 1000, 'msg': '促销开启设置成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goods_promote07\test_business_token_goods_promote01.py", line 56, in test_goods_promote
    assert eval(case.expect) == res
AssertionError: assert {'code': 1000...': '促销开启设置成功'} == {'code': 1006...'促销结束时间格式不正确'}
  Differing items:
  {'msg': '促销开启设置成功'} != {'msg': '促销结束时间格式不正确'}
  {'code': 1000} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': '促销结束时间格式不正确'}
  ?             ^            ^^^^^^^^^
  + {'code': 1000, 'msg': '促销开启设置成功'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-03-09 16:39:01,044 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号4，测试标题商品信息查询—上一次token值，执行失败，实际结果为{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': 'iphone20', 'shopPrice': 9999.99, 'promotePrice': 1.0, 'num': 100}, {'goodsName': 'iphone11', 'shopPrice': 9999.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '好吃点', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '饼干', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '水果', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '菠萝', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'aaaaaaaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '肉', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '如如如如', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '精华面霜', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': 'aaa', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小白瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '小红瓶', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 200}, {'goodsName': '美容仪', 'shopPrice': 2000.0, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '防晒二代', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 200}]}
2022-03-09 16:39:01,045 - [test_business_token_goodsinfo03.py - 97] - 40:assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 92, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (135 lines hidden), use '-vv' to show
2022-03-09 16:39:03,252 - [test_business_token_goodsinfo03.py - 96] - 40:测试编号20，测试标题商品信息查询—（带商品）销售状态为1、促销状态为1，执行失败，实际结果为{'code': 1008, 'msg': '没有符合条件的数据'}
2022-03-09 16:39:03,252 - [test_business_token_goodsinfo03.py - 97] - 40:assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000028ABCD05C50>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 86, in test_goods_info
    assert case.expect in str(res)  # 判断响应体包含查询成功
AssertionError: assert '查询成功' in "{'code': 1008, 'msg': '没有符合条件的数据'}"
 +  where '查询成功' = <comms.excel_utils.CaseData object at 0x0000028ABCD05C50>.expect
 +  and   "{'code': 1008, 'msg': '没有符合条件的数据'}" = str({'code': 1008, 'msg': '没有符合条件的数据'})
2022-03-09 16:39:04,665 - [test_login05.py - 75] - 40:测试编号5，测试标题测试密码区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njg0NTE0NC40ODA3MzU6ZWY5NTI3ODc1ZjNiZWQ3YmY1MTlmODRmZjBjNWU3MDEzZWMzMTFlMA=='}
2022-03-09 16:39:04,666 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZWMzMTFlMA=='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NTE0NC40ODA3MzU6ZWY5NTI3ODc1ZjNiZWQ3YmY1MTlmODRmZjBjNWU3MDEzZWMzMTFlMA=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZWMzMTFlMA=='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NTE0NC40ODA3MzU6ZWY5NTI3ODc1ZjNiZWQ3YmY1MTlmODRmZjBjNWU3MDEzZWMzMTFlMA=='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-09 16:39:04,801 - [test_login05.py - 75] - 40:测试编号6，测试标题测试用户名区分大小写的场景，执行失败，实际结果{'code': 1000, 'msg': '登录成功', 'token': 'MTY0Njg0NTE0NC42ODExOTg2OjExYmE4NmRkNjI5OWIzNGRhODc5MDU4OTQ1MTRmOTY4ZTcxY2E3ODU='}
2022-03-09 16:39:04,802 - [test_login05.py - 76] - 40:assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTcxY2E3ODU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NTE0NC42ODExOTg2OjExYmE4NmRkNjI5OWIzNGRhODc5MDU4OTQ1MTRmOTY4ZTcxY2E3ODU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_login02\test_login05.py", line 72, in test_login
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZTcxY2E3ODU='}
  Differing items:
  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'token': 'MTY0Njg0NTE0NC42ODExOTg2OjExYmE4NmRkNjI5OWIzNGRhODc5MDU4OTQ1MTRmOTY4ZTcxY2E3ODU='}
  Full diff:
    {...
  
  ...Full output truncated (9 lines hidden), use '-vv' to show
2022-03-09 16:39:06,166 - [test_business_token_order_items01.py - 74] - 40:测试编号4，测试标题订单信息查询——上一次token值，测试失败，实际结果{'code': 1000, 'msg': '查询成功', 'name': 'AutoTrue', 'phone': '15888888888', 'status': '未支付', 'value': 100.0, 'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}]}
2022-03-09 16:39:06,166 - [test_business_token_order_items01.py - 75] - 40:assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_order_items05\test_business_token_order_items01.py", line 71, in test_order_items
    assert eval(case.expect) == res
AssertionError: assert {'code': 1004...请检查token是否失效'} == {'code': 1000...utoTrue', ...}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1004} != {'code': 1000}
  Right contains 5 more items:
  {'goods_tiems': [{'goods_name': '预留数据', 'goods_price': 100.0}],
   'name': 'AutoTrue',
   'phone': '15888888888',...
  
  ...Full output truncated (18 lines hidden), use '-vv' to show
